version: '3.7'

services:
  trino:
    image: trinodb/trino:latest
    ports:
      - "8081:8080"
    volumes:
      - ./config/catalog:/etc/trino/catalog
    depends_on:
      - minio
      - metastore

  init-trino:
    image: trinodb/trino:latest
    depends_on:
      trino:
        condition: service_healthy
      init-minio:
        condition: service_completed_successfully
    entrypoint: >
      /bin/sh -c "
      until curl -s http://trino:8080/v1/info; do
        echo 'Waiting for Trino to be ready...';
        sleep 5;
      done;
      trino --server trino:8080 --execute \"
      CREATE TABLE hive.default.sold_car (
        id varchar,
        brand VARCHAR,
        price double,
        created_at int
      )
      WITH (
        external_location = 's3a://data-bucket/data/',
        format = 'parquet'
      );
      \";
      exit 0;
        "
  init-metastore:
    image: busybox:latest
    command: >
      sh -c "
      if [ ! -f /jars/aws-java-sdk-bundle-1.11.1026.jar ]; then
        wget -O /jars/aws-java-sdk-bundle-1.11.1026.jar https://repo1.maven.org/maven2/com/amazonaws/aws-java-sdk-bundle/1.11.1026/aws-java-sdk-bundle-1.11.1026.jar;
      fi;
      if [ ! -f /jars/hadoop-aws-3.3.6.jar ]; then
        wget -O /jars/hadoop-aws-3.3.6.jar https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-aws/3.3.6/hadoop-aws-3.3.6.jar;
      fi;
      touch /jars/ready;
      "
    volumes:
      - ./config/hive/plugin:/jars

  metastore:
    image: apache/hive:4.0.1
    container_name: hive-metastore
    environment:
      SERVICE_NAME: metastore
    depends_on:
      init-metastore:
        condition: service_completed_successfully
    ports:
      - '9083:9083'
    volumes:
      - ./trino/config/hive/hive-site.xml:/opt/hive/conf/hive-site.xml
      - ./trino/config/hive/plugin/aws-java-sdk-bundle-1.11.1026.jar:/opt/hive/lib/aws-java-sdk-bundle-1.11.1026.jar
      - ./trino/config/hive/plugin/hadoop-aws-3.3.6.jar:/opt/hive/lib/hadoop-aws-3.3.6.jar

  minio:
    image: minio/minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=trino-datasource
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/data/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - trino
      - minio
    entrypoint: >
      /bin/sh -c "
      grafana cli plugins install trino-datasource || exit 1;
      /run.sh
      "
      

  init-minio:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb myminio/data-bucket;
      /usr/bin/mc anonymous set public myminio/data-bucket;
      /usr/bin/mc admin user svcacct add myminio minio --access-key minio_access_key --secret-key minio_secret_key;
      /usr/bin/mc mb myminio/data-bucket/data;
      exit 0;
      "