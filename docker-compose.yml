version: '3.8'

services:
  broker-1:
    image: apache/kafka:latest
    container_name: broker-1
    restart: unless-stopped
    ports:
      - "19092:9092"
    environment:
      # Shared setup
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:19092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker-1:9093,2@broker-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # Broker setup
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:19092,PLAINTEXT_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    healthcheck:
      test:
        [
          'CMD',
          '/opt/kafka/bin/kafka-topics.sh',
          '--bootstrap-server',
          'localhost:9092',
          '--list',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  broker-2:
    image: apache/kafka:latest
    container_name: broker-2
    restart: unless-stopped
    ports:
      - "29092:9092"
    environment:
      # Shared setup
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:19092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker-1:9093,2@broker-2:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # Broker setup
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:19092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    healthcheck:
      test:
        [
          'CMD',
          '/opt/kafka/bin/kafka-topics.sh',
          '--bootstrap-server',
          'localhost:9092',
          '--list',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-init:
    image: apache/kafka:latest
    depends_on:
      - broker-1
      - broker-2
    environment:
      BOOTSTRAP_SERVERS: broker-1:19092
    entrypoint: >
      bash -c '
        echo "Waiting for Kafka to be ready...";
        for i in {1..30}; do
          /opt/kafka/bin/kafka-topics.sh --bootstrap-server broker-1:19092 --list && break || sleep 2;
        done;
        echo "Creating topics...";
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server broker-1:19092 --topic Order --partitions 1 --replication-factor 1 &&
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server broker-1:19092 --topic Wheel --partitions 1 --replication-factor 1 &&
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server broker-1:19092 --topic Chassis --partitions 1 --replication-factor 1 &&
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server broker-1:19092 --topic SoldCar --partitions 1 --replication-factor 1 &&
        echo "Kafka initialization complete.";'


  akhq:
    image: tchiotludo/akhq:latest
    container_name: akhq
    depends_on:
      broker-1:
        condition: service_healthy
      broker-2:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "broker-1:19092,broker-2:19092"
